/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import static GUI.InitialFrame.f;
import java.awt.CardLayout;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import scrabble_client.*;
/**
 *
 * @author HUGUETA

 */
public class MainFrame extends javax.swing.JFrame {
    static private String username;
    private String userFromProfileTable = "";
    String room = "";
 
    public MainFrame(String user) {
        initComponents();
        MainFrame.username = user;
        ClientService clientService = ClientService.getInstance();
        clientService.setMainFrame(this);
        usernameL.setText(user);
        clientService.display();
        clientService.NrMsgRequest(user);
        clientService.requestMsglist(user);

        this.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent windowEvent) {
        if (JOptionPane.showConfirmDialog(f, 
            "Are you sure to close this window?", "Really Closing?", 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
               ClientService clientservice = ClientService.getInstance(); 
                clientservice.logoutRequest(username);
                clientservice.disposeMainFrame();
                System.exit(0);
            }
        }
    });
        
        
        //this.setDefaultCloseOperation(PROPERTIES);
    }

    private MainFrame() {

        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        quitConfirm = new javax.swing.JDialog();
        NoB = new javax.swing.JButton();
        yesB = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        privMsgDialog = new javax.swing.JDialog();
        privMsgInput = new javax.swing.JTextField();
        destinationLabel = new javax.swing.JLabel();
        sendMsgB = new javax.swing.JButton();
        inboxDialog = new javax.swing.JDialog();
        inboxCloseB = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgArea = new javax.swing.JTextArea();
        senderLabel = new javax.swing.JLabel();
        nextMsgB = new javax.swing.JButton();
        mainFramePanel = new javax.swing.JPanel();
        ChatP = new javax.swing.JPanel();
        TabsTableRank = new javax.swing.JTabbedPane();
        chatPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        chatarea = new javax.swing.JTextArea();
        chatinput = new javax.swing.JTextField();
        playersPanel = new javax.swing.JPanel();
        profsOptPanel2 = new javax.swing.JPanel();
        inviteB2 = new javax.swing.JButton();
        sendmessageB2 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        playerList2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        menuBarSettings = new javax.swing.JPanel();
        homeB1 = new javax.swing.JButton();
        rankingB1 = new javax.swing.JButton();
        helpB1 = new javax.swing.JButton();
        settingsB1 = new javax.swing.JButton();
        logoutB1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        basePanel = new javax.swing.JPanel();
        mainPage = new javax.swing.JPanel();
        refreshB = new javax.swing.JLabel();
        usernameL = new javax.swing.JLabel();
        welcome = new javax.swing.JLabel();
        joinB = new javax.swing.JButton();
        createB = new javax.swing.JButton();
        msgsLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        roomScrollPane = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        inboxB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rankingP = new javax.swing.JPanel();
        ranksScroll = new javax.swing.JScrollPane();
        ranking = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        settingsPage = new javax.swing.JPanel();
        volumeL = new javax.swing.JLabel();
        volumeSlider = new javax.swing.JSlider();
        newEmailL = new javax.swing.JLabel();
        newEmailInput = new javax.swing.JTextField();
        confirmPassL = new javax.swing.JLabel();
        currentPassL = new javax.swing.JLabel();
        newPassL = new javax.swing.JLabel();
        currentPassInput = new javax.swing.JPasswordField();
        newPassInput = new javax.swing.JPasswordField();
        confirmPassInput = new javax.swing.JPasswordField();
        changesB = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        newRoomPage = new javax.swing.JPanel();
        roomNameLabel = new javax.swing.JLabel();
        PlayersNumber = new javax.swing.JComboBox<>();
        roomNameInput = new javax.swing.JTextField();
        privateGameCheckBox = new javax.swing.JCheckBox();
        backB = new javax.swing.JButton();
        createRoomB = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        roomOwnerPage = new javax.swing.JPanel();
        quitB = new javax.swing.JButton();
        startB = new javax.swing.JButton();
        playersGrid = new javax.swing.JPanel();
        player1 = new javax.swing.JLabel();
        player1Status = new javax.swing.JLabel();
        player2 = new javax.swing.JLabel();
        player2Status = new javax.swing.JLabel();
        player3 = new javax.swing.JLabel();
        player3Status = new javax.swing.JLabel();
        player4 = new javax.swing.JLabel();
        player4Status = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        roomPage = new javax.swing.JPanel();
        quitRoomB = new javax.swing.JButton();
        readyB = new javax.swing.JButton();
        playersRoomGrid = new javax.swing.JPanel();
        player5 = new javax.swing.JLabel();
        player5Status = new javax.swing.JLabel();
        player6 = new javax.swing.JLabel();
        player6Status = new javax.swing.JLabel();
        player7 = new javax.swing.JLabel();
        player7Status = new javax.swing.JLabel();
        player8 = new javax.swing.JLabel();
        player8Status = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        helpPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();

        quitConfirm.setAlwaysOnTop(true);
        quitConfirm.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        quitConfirm.setMinimumSize(new java.awt.Dimension(400, 200));
        quitConfirm.setResizable(false);
        quitConfirm.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        quitConfirm.setLocationRelativeTo(null);
        quitConfirm.setSize(new Dimension(400,200));

        NoB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        NoB.setText("No");
        NoB.setMaximumSize(null);
        NoB.setMinimumSize(new java.awt.Dimension(70, 40));
        NoB.setPreferredSize(new java.awt.Dimension(100, 40));
        NoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoBActionPerformed(evt);
            }
        });
        quitConfirm.getContentPane().add(NoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        yesB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        yesB.setText("Yes");
        yesB.setMaximumSize(null);
        yesB.setMinimumSize(new java.awt.Dimension(70, 40));
        yesB.setPreferredSize(new java.awt.Dimension(100, 40));
        yesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesBActionPerformed(evt);
            }
        });
        quitConfirm.getContentPane().add(yesB, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setText("Are You Sure?");
        quitConfirm.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        privMsgDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        privMsgDialog.setAlwaysOnTop(true);
        privMsgDialog.setMinimumSize(new java.awt.Dimension(400, 240));
        privMsgDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        privMsgDialog.setResizable(false);
        privMsgDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        privMsgDialog.setLocationRelativeTo(null);
        privMsgDialog.setSize(new Dimension(400,240));

        privMsgInput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        privMsgInput.setToolTipText("");
        privMsgInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                privMsgInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                privMsgInputFocusLost(evt);
            }
        });
        privMsgInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privMsgInputActionPerformed(evt);
            }
        });
        privMsgDialog.getContentPane().add(privMsgInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 300, 80));

        destinationLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        destinationLabel.setText("username");
        privMsgDialog.getContentPane().add(destinationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 300, 30));

        sendMsgB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sendMsgB.setText("Send ");
        sendMsgB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMsgBActionPerformed(evt);
            }
        });
        privMsgDialog.getContentPane().add(sendMsgB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 110, 50));

        inboxDialog.setAlwaysOnTop(true);
        inboxDialog.setMinimumSize(new java.awt.Dimension(400, 260));
        inboxDialog.setResizable(false);
        inboxDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        inboxDialog.setLocationRelativeTo(null);
        inboxDialog.setSize(new Dimension(400,260));

        inboxCloseB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        inboxCloseB.setText("Close");
        inboxCloseB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inboxCloseBActionPerformed(evt);
            }
        });
        inboxDialog.getContentPane().add(inboxCloseB, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 90, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setText("Received Messages");
        inboxDialog.getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 220, 30));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        msgArea.setColumns(20);
        msgArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        msgArea.setRows(5);
        jScrollPane1.setViewportView(msgArea);

        inboxDialog.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 360, 100));

        senderLabel.setBackground(new java.awt.Color(153, 255, 153));
        senderLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        senderLabel.setForeground(new java.awt.Color(0, 102, 0));
        senderLabel.setText("sender");
        inboxDialog.getContentPane().add(senderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 360, 30));

        nextMsgB.setText("Next Message");
        nextMsgB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextMsgBActionPerformed(evt);
            }
        });
        inboxDialog.getContentPane().add(nextMsgB, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, -1, -1));

        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        mainFramePanel.setLayout(new java.awt.BorderLayout());

        ChatP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TabsTableRank.setMinimumSize(new java.awt.Dimension(235, 260));
        TabsTableRank.setPreferredSize(new java.awt.Dimension(235, 260));

        chatPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        chatarea.setEditable(false);
        chatarea.setColumns(20);
        chatarea.setRows(5);
        chatarea.setWrapStyleWord(true);
        jScrollPane7.setViewportView(chatarea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        chatPanel.add(jScrollPane7, gridBagConstraints);

        chatinput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                chatinputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                chatinputFocusLost(evt);
            }
        });
        chatinput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatinputActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        chatPanel.add(chatinput, gridBagConstraints);

        TabsTableRank.addTab("Chat", chatPanel);

        playersPanel.setLayout(new java.awt.BorderLayout());

        profsOptPanel2.setMinimumSize(new java.awt.Dimension(222, 25));
        profsOptPanel2.setOpaque(false);
        profsOptPanel2.setPreferredSize(new java.awt.Dimension(232, 35));
        profsOptPanel2.setLayout(new java.awt.BorderLayout());

        inviteB2.setText("Invite To Play");
        inviteB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviteB2ActionPerformed(evt);
            }
        });
        profsOptPanel2.add(inviteB2, java.awt.BorderLayout.CENTER);

        sendmessageB2.setText("Send Message");
        sendmessageB2.setOpaque(false);
        sendmessageB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendmessageB2ActionPerformed(evt);
            }
        });
        profsOptPanel2.add(sendmessageB2, java.awt.BorderLayout.LINE_START);

        playersPanel.add(profsOptPanel2, java.awt.BorderLayout.PAGE_END);

        playerList2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        playerList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                playerList2MouseReleased(evt);
            }
        });
        jScrollPane8.setViewportView(playerList2);

        playersPanel.add(jScrollPane8, java.awt.BorderLayout.CENTER);

        TabsTableRank.addTab("Players", playersPanel);

        ChatP.add(TabsTableRank, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 220, 380));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pageBackground.png"))); // NOI18N
        jLabel5.setMaximumSize(new java.awt.Dimension(300, 550));
        jLabel5.setMinimumSize(new java.awt.Dimension(300, 550));
        jLabel5.setPreferredSize(new java.awt.Dimension(300, 550));
        ChatP.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        mainFramePanel.add(ChatP, java.awt.BorderLayout.EAST);

        menuBarSettings.setOpaque(false);
        menuBarSettings.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeB1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        homeB1.setText("Home");
        homeB1.setMaximumSize(new java.awt.Dimension(140, 40));
        homeB1.setMinimumSize(new java.awt.Dimension(140, 40));
        homeB1.setPreferredSize(new java.awt.Dimension(140, 40));
        homeB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeB1ActionPerformed(evt);
            }
        });
        menuBarSettings.add(homeB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 5, -1, -1));

        rankingB1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        rankingB1.setText("Ranking");
        rankingB1.setMaximumSize(new java.awt.Dimension(140, 40));
        rankingB1.setMinimumSize(new java.awt.Dimension(140, 40));
        rankingB1.setPreferredSize(new java.awt.Dimension(140, 40));
        rankingB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rankingB1ActionPerformed(evt);
            }
        });
        menuBarSettings.add(rankingB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 5, -1, -1));

        helpB1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        helpB1.setText("Help");
        helpB1.setMaximumSize(new java.awt.Dimension(140, 40));
        helpB1.setMinimumSize(new java.awt.Dimension(140, 40));
        helpB1.setPreferredSize(new java.awt.Dimension(140, 40));
        helpB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpB1ActionPerformed(evt);
            }
        });
        menuBarSettings.add(helpB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 5, -1, -1));

        settingsB1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        settingsB1.setText("Settings");
        settingsB1.setMaximumSize(new java.awt.Dimension(140, 40));
        settingsB1.setMinimumSize(new java.awt.Dimension(140, 40));
        settingsB1.setPreferredSize(new java.awt.Dimension(140, 40));
        settingsB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsB1ActionPerformed(evt);
            }
        });
        menuBarSettings.add(settingsB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 5, -1, -1));

        logoutB1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        logoutB1.setText("Logout");
        logoutB1.setMaximumSize(new java.awt.Dimension(140, 40));
        logoutB1.setMinimumSize(new java.awt.Dimension(140, 40));
        logoutB1.setPreferredSize(new java.awt.Dimension(140, 40));
        logoutB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutB1ActionPerformed(evt);
            }
        });
        menuBarSettings.add(logoutB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 5, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/barBackground.png"))); // NOI18N
        menuBarSettings.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 50));

        mainFramePanel.add(menuBarSettings, java.awt.BorderLayout.PAGE_START);

        basePanel.setLayout(new java.awt.CardLayout());

        mainPage.setOpaque(false);
        mainPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refreshB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refreshB.png"))); // NOI18N
        refreshB.setName(""); // NOI18N
        refreshB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshBMouseClicked(evt);
            }
        });
        mainPage.add(refreshB, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, -1));

        usernameL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        usernameL.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        usernameL.setText("username");
        mainPage.add(usernameL, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 80, 30));

        welcome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        welcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcome.setText("Welcome");
        mainPage.add(welcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 80, 30));

        joinB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        joinB.setText("Join Room");
        joinB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinBActionPerformed(evt);
            }
        });
        mainPage.add(joinB, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 180, 40));

        createB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        createB.setText("Create Room");
        createB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBActionPerformed(evt);
            }
        });
        mainPage.add(createB, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 180, 40));

        msgsLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        msgsLabel.setText("0");
        mainPage.add(msgsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 30, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("You have     new messages");
        mainPage.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 220, 30));

        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room", "Players", "Joinable", "Room Owner"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        roomTable.setRowHeight(30);
        roomTable.getTableHeader().setReorderingAllowed(false);
        roomScrollPane.setViewportView(roomTable);

        mainPage.add(roomScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 370, 180));

        inboxB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        inboxB.setText("Messages");
        inboxB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        inboxB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inboxBActionPerformed(evt);
            }
        });
        mainPage.add(inboxB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 100, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pageBackground.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(500, 550));
        jLabel1.setMinimumSize(new java.awt.Dimension(500, 550));
        jLabel1.setPreferredSize(new java.awt.Dimension(500, 550));
        mainPage.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        basePanel.add(mainPage, "mainP");

        rankingP.setMinimumSize(new java.awt.Dimension(500, 550));
        rankingP.setPreferredSize(new java.awt.Dimension(500, 550));
        rankingP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ranksScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        ranking.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ranking.setFocusable(false);
        ranking.setRowHeight(20);
        ranking.setRowSelectionAllowed(false);
        ranking.getTableHeader().setResizingAllowed(false);
        ranking.getTableHeader().setReorderingAllowed(false);
        ranksScroll.setViewportView(ranking);

        rankingP.add(ranksScroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, 350));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pageBackground.png"))); // NOI18N
        rankingP.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 550));

        basePanel.add(rankingP, "rankP");

        settingsPage.setOpaque(false);
        settingsPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        volumeL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        volumeL.setText("Volume");
        volumeL.setMinimumSize(new java.awt.Dimension(110, 30));
        volumeL.setPreferredSize(new java.awt.Dimension(110, 30));
        settingsPage.add(volumeL, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 80, -1));

        volumeSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        volumeSlider.setMinimumSize(new java.awt.Dimension(200, 40));
        volumeSlider.setPreferredSize(new java.awt.Dimension(200, 40));
        settingsPage.add(volumeSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 40, 230));

        newEmailL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        newEmailL.setText("New Email");
        newEmailL.setMaximumSize(new java.awt.Dimension(110, 30));
        newEmailL.setMinimumSize(new java.awt.Dimension(110, 30));
        newEmailL.setPreferredSize(new java.awt.Dimension(110, 30));
        settingsPage.add(newEmailL, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 200, -1));

        newEmailInput.setMinimumSize(new java.awt.Dimension(200, 40));
        newEmailInput.setPreferredSize(new java.awt.Dimension(200, 40));
        newEmailInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmailInputActionPerformed(evt);
            }
        });
        settingsPage.add(newEmailInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, -1, -1));

        confirmPassL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        confirmPassL.setText("Confirm Password");
        confirmPassL.setMaximumSize(new java.awt.Dimension(110, 30));
        confirmPassL.setMinimumSize(new java.awt.Dimension(110, 30));
        confirmPassL.setPreferredSize(new java.awt.Dimension(110, 30));
        settingsPage.add(confirmPassL, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 200, -1));

        currentPassL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        currentPassL.setText("Current Password");
        currentPassL.setMaximumSize(new java.awt.Dimension(110, 30));
        currentPassL.setMinimumSize(new java.awt.Dimension(110, 30));
        currentPassL.setPreferredSize(new java.awt.Dimension(110, 30));
        settingsPage.add(currentPassL, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 190, -1));

        newPassL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        newPassL.setText("New Password");
        newPassL.setMaximumSize(new java.awt.Dimension(110, 30));
        newPassL.setMinimumSize(new java.awt.Dimension(110, 30));
        newPassL.setPreferredSize(new java.awt.Dimension(110, 30));
        settingsPage.add(newPassL, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 190, -1));

        currentPassInput.setMinimumSize(new java.awt.Dimension(200, 40));
        currentPassInput.setPreferredSize(new java.awt.Dimension(200, 40));
        settingsPage.add(currentPassInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

        newPassInput.setMinimumSize(new java.awt.Dimension(200, 40));
        newPassInput.setPreferredSize(new java.awt.Dimension(200, 40));
        settingsPage.add(newPassInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, -1));

        confirmPassInput.setMinimumSize(new java.awt.Dimension(200, 40));
        confirmPassInput.setPreferredSize(new java.awt.Dimension(200, 40));
        confirmPassInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPassInputActionPerformed(evt);
            }
        });
        settingsPage.add(confirmPassInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, -1, -1));

        changesB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        changesB.setText("Confirm Changes");
        changesB.setMaximumSize(new java.awt.Dimension(130, 60));
        changesB.setMinimumSize(new java.awt.Dimension(130, 60));
        changesB.setPreferredSize(new java.awt.Dimension(130, 60));
        changesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changesBActionPerformed(evt);
            }
        });
        settingsPage.add(changesB, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 220, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pageBackground.png"))); // NOI18N
        jLabel3.setMaximumSize(new java.awt.Dimension(500, 550));
        jLabel3.setMinimumSize(new java.awt.Dimension(500, 550));
        jLabel3.setPreferredSize(new java.awt.Dimension(500, 550));
        settingsPage.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        basePanel.add(settingsPage, "settingP");

        newRoomPage.setToolTipText("");
        newRoomPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roomNameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        roomNameLabel.setText("Room Name");
        roomNameLabel.setMaximumSize(null);
        roomNameLabel.setMinimumSize(new java.awt.Dimension(200, 40));
        roomNameLabel.setPreferredSize(new java.awt.Dimension(110, 30));
        newRoomPage.add(roomNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 140, -1));

        PlayersNumber.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        PlayersNumber.setMaximumRowCount(3);
        PlayersNumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2 Players", "3 Players", "4 Players" }));
        PlayersNumber.setMinimumSize(new java.awt.Dimension(200, 40));
        PlayersNumber.setPreferredSize(new java.awt.Dimension(200, 40));
        PlayersNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayersNumberActionPerformed(evt);
            }
        });
        newRoomPage.add(PlayersNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, -1, -1));

        roomNameInput.setMinimumSize(new java.awt.Dimension(200, 40));
        roomNameInput.setPreferredSize(new java.awt.Dimension(200, 40));
        roomNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNameInputActionPerformed(evt);
            }
        });
        newRoomPage.add(roomNameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, -1, -1));

        privateGameCheckBox.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        privateGameCheckBox.setText("Private Game");
        privateGameCheckBox.setMaximumSize(null);
        privateGameCheckBox.setMinimumSize(new java.awt.Dimension(200, 40));
        privateGameCheckBox.setOpaque(false);
        privateGameCheckBox.setPreferredSize(new java.awt.Dimension(200, 40));
        privateGameCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privateGameCheckBoxActionPerformed(evt);
            }
        });
        newRoomPage.add(privateGameCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, -1, -1));

        backB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        backB.setText("Back");
        backB.setMaximumSize(null);
        backB.setMinimumSize(new java.awt.Dimension(140, 40));
        backB.setPreferredSize(new java.awt.Dimension(100, 30));
        backB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBActionPerformed(evt);
            }
        });
        newRoomPage.add(backB, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, -1, -1));

        createRoomB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        createRoomB.setText("Create");
        createRoomB.setMaximumSize(null);
        createRoomB.setMinimumSize(new java.awt.Dimension(140, 40));
        createRoomB.setPreferredSize(new java.awt.Dimension(140, 40));
        createRoomB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRoomBActionPerformed(evt);
            }
        });
        newRoomPage.add(createRoomB, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 305, 140, 40));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pageBackground.png"))); // NOI18N
        jLabel6.setMaximumSize(new java.awt.Dimension(500, 550));
        jLabel6.setMinimumSize(new java.awt.Dimension(500, 550));
        jLabel6.setPreferredSize(new java.awt.Dimension(500, 550));
        newRoomPage.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        basePanel.add(newRoomPage, "newRoomP");

        roomOwnerPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        quitB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        quitB.setText("QUIT");
        quitB.setMaximumSize(new java.awt.Dimension(110, 40));
        quitB.setMinimumSize(new java.awt.Dimension(110, 40));
        quitB.setPreferredSize(new java.awt.Dimension(110, 40));
        quitB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitBActionPerformed(evt);
            }
        });
        roomOwnerPage.add(quitB, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, -1, -1));

        startB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startB.setText("START");
        startB.setMaximumSize(new java.awt.Dimension(110, 40));
        startB.setMinimumSize(new java.awt.Dimension(110, 40));
        startB.setPreferredSize(new java.awt.Dimension(110, 40));
        startB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBActionPerformed(evt);
            }
        });
        roomOwnerPage.add(startB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, -1, -1));

        playersGrid.setMinimumSize(new java.awt.Dimension(300, 148));
        playersGrid.setOpaque(false);
        playersGrid.setPreferredSize(new java.awt.Dimension(300, 148));
        playersGrid.setLayout(new java.awt.GridLayout(4, 2, 2, 2));

        player1.setBackground(new java.awt.Color(255, 255, 255));
        player1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1.setMinimumSize(new java.awt.Dimension(148, 37));
        player1.setOpaque(true);
        player1.setPreferredSize(new java.awt.Dimension(148, 37));
        playersGrid.add(player1);

        player1Status.setBackground(new java.awt.Color(255, 255, 255));
        player1Status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player1Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1Status.setText("Owner");
        player1Status.setMinimumSize(new java.awt.Dimension(148, 37));
        player1Status.setOpaque(true);
        player1Status.setPreferredSize(new java.awt.Dimension(148, 37));
        playersGrid.add(player1Status);

        player2.setBackground(new java.awt.Color(255, 255, 255));
        player2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2.setMinimumSize(new java.awt.Dimension(148, 37));
        player2.setOpaque(true);
        player2.setPreferredSize(new java.awt.Dimension(148, 37));
        playersGrid.add(player2);

        player2Status.setBackground(new java.awt.Color(255, 255, 255));
        player2Status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player2Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2Status.setMinimumSize(new java.awt.Dimension(148, 37));
        player2Status.setOpaque(true);
        player2Status.setPreferredSize(new java.awt.Dimension(148, 37));
        playersGrid.add(player2Status);

        player3.setBackground(new java.awt.Color(255, 255, 255));
        player3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player3.setMinimumSize(new java.awt.Dimension(148, 37));
        player3.setOpaque(true);
        player3.setPreferredSize(new java.awt.Dimension(148, 37));
        playersGrid.add(player3);

        player3Status.setBackground(new java.awt.Color(255, 255, 255));
        player3Status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player3Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player3Status.setMinimumSize(new java.awt.Dimension(148, 37));
        player3Status.setOpaque(true);
        player3Status.setPreferredSize(new java.awt.Dimension(148, 37));
        playersGrid.add(player3Status);

        player4.setBackground(new java.awt.Color(255, 255, 255));
        player4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player4.setMinimumSize(new java.awt.Dimension(148, 37));
        player4.setOpaque(true);
        player4.setPreferredSize(new java.awt.Dimension(148, 37));
        playersGrid.add(player4);

        player4Status.setBackground(new java.awt.Color(255, 255, 255));
        player4Status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player4Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player4Status.setMinimumSize(new java.awt.Dimension(148, 37));
        player4Status.setOpaque(true);
        player4Status.setPreferredSize(new java.awt.Dimension(148, 37));
        playersGrid.add(player4Status);

        roomOwnerPage.add(playersGrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pageBackground.png"))); // NOI18N
        jLabel8.setMaximumSize(new java.awt.Dimension(500, 550));
        jLabel8.setMinimumSize(new java.awt.Dimension(500, 550));
        jLabel8.setPreferredSize(new java.awt.Dimension(500, 550));
        roomOwnerPage.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        basePanel.add(roomOwnerPage, "roomOwnerP");

        roomPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        quitRoomB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        quitRoomB.setText("QUIT");
        quitRoomB.setMaximumSize(new java.awt.Dimension(110, 40));
        quitRoomB.setMinimumSize(new java.awt.Dimension(110, 40));
        quitRoomB.setPreferredSize(new java.awt.Dimension(110, 40));
        quitRoomB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitRoomBActionPerformed(evt);
            }
        });
        roomPage.add(quitRoomB, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, -1, -1));

        readyB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        readyB.setText("READY");
        readyB.setMaximumSize(new java.awt.Dimension(110, 40));
        readyB.setMinimumSize(new java.awt.Dimension(110, 40));
        readyB.setPreferredSize(new java.awt.Dimension(110, 40));
        readyB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readyBActionPerformed(evt);
            }
        });
        roomPage.add(readyB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, -1, -1));

        playersRoomGrid.setMinimumSize(new java.awt.Dimension(300, 148));
        playersRoomGrid.setOpaque(false);
        playersRoomGrid.setPreferredSize(new java.awt.Dimension(300, 148));
        playersRoomGrid.setLayout(new java.awt.GridLayout(4, 2, 2, 2));

        player5.setBackground(new java.awt.Color(255, 255, 255));
        player5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player5.setMinimumSize(new java.awt.Dimension(148, 37));
        player5.setOpaque(true);
        player5.setPreferredSize(new java.awt.Dimension(148, 37));
        playersRoomGrid.add(player5);

        player5Status.setBackground(new java.awt.Color(255, 255, 255));
        player5Status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player5Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player5Status.setText("Owner");
        player5Status.setMinimumSize(new java.awt.Dimension(148, 37));
        player5Status.setOpaque(true);
        player5Status.setPreferredSize(new java.awt.Dimension(148, 37));
        playersRoomGrid.add(player5Status);

        player6.setBackground(new java.awt.Color(255, 255, 255));
        player6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player6.setMinimumSize(new java.awt.Dimension(148, 37));
        player6.setOpaque(true);
        player6.setPreferredSize(new java.awt.Dimension(148, 37));
        playersRoomGrid.add(player6);

        player6Status.setBackground(new java.awt.Color(255, 255, 255));
        player6Status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player6Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player6Status.setMinimumSize(new java.awt.Dimension(148, 37));
        player6Status.setOpaque(true);
        player6Status.setPreferredSize(new java.awt.Dimension(148, 37));
        playersRoomGrid.add(player6Status);

        player7.setBackground(new java.awt.Color(255, 255, 255));
        player7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player7.setMinimumSize(new java.awt.Dimension(148, 37));
        player7.setOpaque(true);
        player7.setPreferredSize(new java.awt.Dimension(148, 37));
        playersRoomGrid.add(player7);

        player7Status.setBackground(new java.awt.Color(255, 255, 255));
        player7Status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player7Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player7Status.setMinimumSize(new java.awt.Dimension(148, 37));
        player7Status.setOpaque(true);
        player7Status.setPreferredSize(new java.awt.Dimension(148, 37));
        playersRoomGrid.add(player7Status);

        player8.setBackground(new java.awt.Color(255, 255, 255));
        player8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player8.setMinimumSize(new java.awt.Dimension(148, 37));
        player8.setOpaque(true);
        player8.setPreferredSize(new java.awt.Dimension(148, 37));
        playersRoomGrid.add(player8);

        player8Status.setBackground(new java.awt.Color(255, 255, 255));
        player8Status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        player8Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player8Status.setMinimumSize(new java.awt.Dimension(148, 37));
        player8Status.setOpaque(true);
        player8Status.setPreferredSize(new java.awt.Dimension(148, 37));
        playersRoomGrid.add(player8Status);

        roomPage.add(playersRoomGrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pageBackground.png"))); // NOI18N
        jLabel9.setMaximumSize(new java.awt.Dimension(500, 550));
        jLabel9.setMinimumSize(new java.awt.Dimension(500, 550));
        jLabel9.setPreferredSize(new java.awt.Dimension(500, 550));
        roomPage.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        basePanel.add(roomPage, "roomP");

        helpPanel.setMinimumSize(new java.awt.Dimension(500, 550));
        helpPanel.setPreferredSize(new java.awt.Dimension(500, 550));
        helpPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("        Frequently Asked Questions (FAQ)\n\nQ1: How to Sign Up/Create Account?\n\nA1: Press Sign Up button above and follow the \nsteps.\n\nQ2: How to Login?\n\nA2: Press Login button above and fill in with your\naccount details (Username and Password).\n\nQ3:How to play?\n\nA3:After the Login is done, press \"Create room\" or \n\"Join room\" and you will be redirected to game board.\n\nQ4: What are the rules ?\n\nA4:\n\n\n");
        jScrollPane2.setViewportView(jTextArea1);

        helpPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 480, 470));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pageBackground.png"))); // NOI18N
        helpPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        basePanel.add(helpPanel, "helpP");

        mainFramePanel.add(basePanel, java.awt.BorderLayout.WEST);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mainFramePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mainFramePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoBActionPerformed
        quitConfirm.dispose();
    }//GEN-LAST:event_NoBActionPerformed

    private void yesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesBActionPerformed
        quitConfirm.dispose();
        ClientService clientService = ClientService.getInstance();
        clientService.logoutRequest(username);
        this.dispose();
    }//GEN-LAST:event_yesBActionPerformed

    private void chatinputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chatinputFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_chatinputFocusGained

    private void chatinputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chatinputFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_chatinputFocusLost

    private void chatinputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatinputActionPerformed
        ClientService clientService = ClientService.getInstance();
        clientService.sendChat(username, chatinput.getText());
        chatinput.setText("");
    }//GEN-LAST:event_chatinputActionPerformed

    private void inviteB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviteB2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inviteB2ActionPerformed

    private void sendmessageB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendmessageB2ActionPerformed
        int row = playerList2.getSelectedRow();
        if(row!=-1){
            userFromProfileTable = playerList2.getModel().getValueAt(row, 0).toString();
            destinationLabel.setText("Message to "+userFromProfileTable);
            privMsgDialog.pack();
            privMsgDialog.setVisible(true);
        }else
             JOptionPane.showMessageDialog(null, "Select an user to send a message");
        
        
    }//GEN-LAST:event_sendmessageB2ActionPerformed

    private void playerList2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerList2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_playerList2MouseReleased

    private void homeB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeB1ActionPerformed
        selectPage("mainP");
    }//GEN-LAST:event_homeB1ActionPerformed

    private void rankingB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rankingB1ActionPerformed
        selectPage("rankP");
        ClientService clientService = ClientService.getInstance();
        clientService.requestRanking();
    }//GEN-LAST:event_rankingB1ActionPerformed

    private void settingsB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsB1ActionPerformed
        selectPage("settingP");
    }//GEN-LAST:event_settingsB1ActionPerformed

    private void logoutB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutB1ActionPerformed
        quitConfirm.pack();
        quitConfirm.setVisible(true);
    }//GEN-LAST:event_logoutB1ActionPerformed

    private void joinBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinBActionPerformed
        int row = roomTable.getSelectedRow();
        if(row != -1){
            room = roomTable.getModel().getValueAt(row, 0).toString();
            //System.out.println("JoinRoom: "+ room);
            ClientService clientService = ClientService.getInstance();
            clientService.joinRoom(room);
        }
    }//GEN-LAST:event_joinBActionPerformed

    private void createBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBActionPerformed
        selectPage("newRoomP");
    }//GEN-LAST:event_createBActionPerformed

    private void newEmailInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmailInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newEmailInputActionPerformed

    private void confirmPassInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPassInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmPassInputActionPerformed

    private void PlayersNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayersNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlayersNumberActionPerformed

    private void roomNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNameInputActionPerformed

    private void privateGameCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privateGameCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_privateGameCheckBoxActionPerformed

    private void backBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBActionPerformed
        selectPage("mainP");
    }//GEN-LAST:event_backBActionPerformed

    private void createRoomBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRoomBActionPerformed
        ClientService clientService = ClientService.getInstance();
        int nPlayers = 2;
        room = roomNameInput.getText();
        switch(PlayersNumber.getSelectedItem().toString()){
            case "2 Players":
                nPlayers = 2;
                break;
            case "3 Players":
                nPlayers = 3;
                break;
            case "4 Players":
                nPlayers = 4;
                break;     
        }
        clientService.createRoom(nPlayers, username, room);
        
        //selectPage("roomOwnerP");
    }//GEN-LAST:event_createRoomBActionPerformed

    private void startBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBActionPerformed
        boolean p2 = false;
        boolean p3 = false;
        boolean p4 = false;
        if( player6Status.getText().equals("Ready"))
            p2 = true;
        if(player7Status.getText().equals("") || player7Status.getText().equals("Ready"))
            p3 = true;
        if(player8Status.getText().equals("") || player8Status.getText().equals("Ready"))
            p4 = true;
        
        if(p2 && p3 && p4){
        ClientService clientService = ClientService.getInstance();
        //clientService.startRoom(room);
        clientService.sendStart(room);
        }else{
            JOptionPane.showMessageDialog(null, "Wait until everyone is ready!");
        }
    }//GEN-LAST:event_startBActionPerformed

    private void quitBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitBActionPerformed
        ClientService clientService = ClientService.getInstance();
        clientService.quitRoom(username, room);
    }//GEN-LAST:event_quitBActionPerformed

    private void quitRoomBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitRoomBActionPerformed
        ClientService clientService = ClientService.getInstance();
        clientService.quitRoom(username, room);
    }//GEN-LAST:event_quitRoomBActionPerformed

    private void readyBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readyBActionPerformed
        ClientService clientService = ClientService.getInstance();
        clientService.ready(username, room);
    }//GEN-LAST:event_readyBActionPerformed

    private void refreshBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBMouseClicked
        ClientService clientService = ClientService.getInstance();
        clientService.viewRooms();
    }//GEN-LAST:event_refreshBMouseClicked

    private void privMsgInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_privMsgInputFocusGained
        
    }//GEN-LAST:event_privMsgInputFocusGained

    private void privMsgInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_privMsgInputFocusLost
        
    }//GEN-LAST:event_privMsgInputFocusLost

    private void privMsgInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privMsgInputActionPerformed
        // Same action as Send Ptivate Message Button
    }//GEN-LAST:event_privMsgInputActionPerformed

    private void sendMsgBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMsgBActionPerformed
        ClientService clientService=ClientService.getInstance();
        String friendMsg=userFromProfileTable;
        String text=privMsgInput.getText();

        if(text.length()>60){
            JOptionPane.showMessageDialog(null, "The message must be less than 60 characters");
        }
        else{
            clientService.sendMessageRequest(username,friendMsg,text);
            JOptionPane.showMessageDialog(null, "Message sent!");
            privMsgDialog.dispose();

        }
               // TODO add your handling code here:
    }//GEN-LAST:event_sendMsgBActionPerformed

    private void inboxBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inboxBActionPerformed
        ClientService clientservice = ClientService.getInstance();
        String nr_msgs = msgsLabel.getText();
         
        if(nr_msgs.equalsIgnoreCase("0")){
        JOptionPane.showMessageDialog(null, "There isn't any new message");         
        }
        else{
        inboxDialog.pack();
        inboxDialog.setVisible(true);
        nextMsgB.doClick();
        }
    }//GEN-LAST:event_inboxBActionPerformed

    private void inboxCloseBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inboxCloseBActionPerformed
        inboxDialog.setVisible(false);
    }//GEN-LAST:event_inboxCloseBActionPerformed

    private void nextMsgBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextMsgBActionPerformed
        ClientService clientService=ClientService.getInstance();  
        int nr_msg = Integer.parseInt(msgsLabel.getText()) -1;
        if(nr_msg>-1){                 
            msgsLabel.setText(Integer.toString(nr_msg));
            String sender = clientService.messages[nr_msg].substring(0, clientService.messages[nr_msg].indexOf("£"));
            String text = clientService.messages[nr_msg].substring(clientService.messages[nr_msg].indexOf("£")+1);
            msgArea.setText(text);
            senderLabel.setText("User "+sender+" sent you a message");
            msgsLabel.setText(Integer.toString(nr_msg));
        } else{
            msgArea.setText("No more messages!!");
            senderLabel.setText("");
        }
    }//GEN-LAST:event_nextMsgBActionPerformed

    private void changesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changesBActionPerformed
        String actualPassword = new String (currentPassInput.getPassword());
        String email = newEmailInput.getText();
        String password = new String (newPassInput.getPassword());
        String confpassword = new String (confirmPassInput.getPassword());
        if(!ClientService.isValidEmailAddress(email)){
            JOptionPane.showMessageDialog(null,"The email must be valid");
        }else if((password.equals("")) || (confpassword.equals("")) || (actualPassword.equals(""))){
            JOptionPane.showMessageDialog(null, "Password fields must be filled");
        }else if(password.equals(confpassword)){
            ClientService clientService = ClientService.getInstance();
            clientService.changeRequest(actualPassword,password,email, username);
            currentPassInput.setText("");
            newEmailInput.setText("");
            newPassInput.setText("");
            confirmPassInput.setText("");
        } else JOptionPane.showMessageDialog(null, "Passwords must be equal");
    }//GEN-LAST:event_changesBActionPerformed

    private void helpB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpB1ActionPerformed
        selectPage("helpP");
    }//GEN-LAST:event_helpB1ActionPerformed
 
        /**
     * Changes homegui front Page (selects card to show from CardLayout)
     * 
     * @param page The page you want to show. Choose between one of these strings: "homeP", "signupP", "loginP", helpP".
     */
    public void selectPage(String page){
        CardLayout card = (CardLayout) basePanel.getLayout();
        card.show(basePanel, page);   
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MainFrame().setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel ChatP;
    public javax.swing.JButton NoB;
    public javax.swing.JComboBox<String> PlayersNumber;
    public javax.swing.JTabbedPane TabsTableRank;
    public javax.swing.JButton backB;
    public javax.swing.JPanel basePanel;
    public javax.swing.JButton changesB;
    public javax.swing.JPanel chatPanel;
    public javax.swing.JTextArea chatarea;
    public javax.swing.JTextField chatinput;
    public javax.swing.JPasswordField confirmPassInput;
    public javax.swing.JLabel confirmPassL;
    public javax.swing.JButton createB;
    public javax.swing.JButton createRoomB;
    public javax.swing.JPasswordField currentPassInput;
    public javax.swing.JLabel currentPassL;
    public javax.swing.JLabel destinationLabel;
    public javax.swing.JButton helpB1;
    public javax.swing.JPanel helpPanel;
    public javax.swing.JButton homeB1;
    public javax.swing.JButton inboxB;
    public javax.swing.JButton inboxCloseB;
    public javax.swing.JDialog inboxDialog;
    public javax.swing.JButton inviteB2;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel13;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane7;
    public javax.swing.JScrollPane jScrollPane8;
    public javax.swing.JTextArea jTextArea1;
    public javax.swing.JButton joinB;
    public javax.swing.JButton logoutB1;
    public javax.swing.JPanel mainFramePanel;
    public javax.swing.JPanel mainPage;
    public javax.swing.JPanel menuBarSettings;
    public javax.swing.JTextArea msgArea;
    public javax.swing.JLabel msgsLabel;
    public javax.swing.JTextField newEmailInput;
    public javax.swing.JLabel newEmailL;
    public javax.swing.JPasswordField newPassInput;
    public javax.swing.JLabel newPassL;
    public javax.swing.JPanel newRoomPage;
    public javax.swing.JButton nextMsgB;
    public javax.swing.JLabel player1;
    public javax.swing.JLabel player1Status;
    public javax.swing.JLabel player2;
    public javax.swing.JLabel player2Status;
    public javax.swing.JLabel player3;
    public javax.swing.JLabel player3Status;
    public javax.swing.JLabel player4;
    public javax.swing.JLabel player4Status;
    public javax.swing.JLabel player5;
    public javax.swing.JLabel player5Status;
    public javax.swing.JLabel player6;
    public javax.swing.JLabel player6Status;
    public javax.swing.JLabel player7;
    public javax.swing.JLabel player7Status;
    public javax.swing.JLabel player8;
    public javax.swing.JLabel player8Status;
    public javax.swing.JTable playerList2;
    public javax.swing.JPanel playersGrid;
    public javax.swing.JPanel playersPanel;
    public javax.swing.JPanel playersRoomGrid;
    public javax.swing.JDialog privMsgDialog;
    public javax.swing.JTextField privMsgInput;
    public javax.swing.JCheckBox privateGameCheckBox;
    public javax.swing.JPanel profsOptPanel2;
    public javax.swing.JButton quitB;
    public javax.swing.JDialog quitConfirm;
    public javax.swing.JButton quitRoomB;
    public javax.swing.JTable ranking;
    public javax.swing.JButton rankingB1;
    public javax.swing.JPanel rankingP;
    public javax.swing.JScrollPane ranksScroll;
    public javax.swing.JButton readyB;
    public javax.swing.JLabel refreshB;
    public javax.swing.JTextField roomNameInput;
    public javax.swing.JLabel roomNameLabel;
    public javax.swing.JPanel roomOwnerPage;
    public javax.swing.JPanel roomPage;
    public javax.swing.JScrollPane roomScrollPane;
    public javax.swing.JTable roomTable;
    public javax.swing.JButton sendMsgB;
    public javax.swing.JLabel senderLabel;
    public javax.swing.JButton sendmessageB2;
    public javax.swing.JButton settingsB1;
    public javax.swing.JPanel settingsPage;
    public javax.swing.JButton startB;
    public javax.swing.JLabel usernameL;
    public javax.swing.JLabel volumeL;
    public javax.swing.JSlider volumeSlider;
    public javax.swing.JLabel welcome;
    public javax.swing.JButton yesB;
    // End of variables declaration//GEN-END:variables

}
